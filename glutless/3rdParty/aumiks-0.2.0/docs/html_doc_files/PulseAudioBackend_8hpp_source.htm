<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>libaumiks: PulseAudioBackend.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript">
$(document).ready(initResizable);
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<!-- Generated by Doxygen 1.7.4 -->
<div id="top">
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">libaumiks&#160;<span id="projectnumber">0.2.0</span></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.htm"><span>File&#160;List</span></a></li>
      <li><a href="globals.htm"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('PulseAudioBackend_8hpp.htm','');
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">PulseAudioBackend.hpp</div>  </div>
</div>
<div class="contents">
<a href="PulseAudioBackend_8hpp.htm">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/* The MIT License:</span>
<a name="l00002"></a>00002 <span class="comment"></span>
<a name="l00003"></a>00003 <span class="comment">Copyright (c) 2009-2012 Ivan Gagis</span>
<a name="l00004"></a>00004 <span class="comment"></span>
<a name="l00005"></a>00005 <span class="comment">Permission is hereby granted, free of charge, to any person obtaining a copy</span>
<a name="l00006"></a>00006 <span class="comment">of this software and associated documentation files (the &quot;Software&quot;), to deal</span>
<a name="l00007"></a>00007 <span class="comment">in the Software without restriction, including without limitation the rights</span>
<a name="l00008"></a>00008 <span class="comment">to use, copy, modify, merge, publish, distribute, sublicense, and/or sell</span>
<a name="l00009"></a>00009 <span class="comment">copies of the Software, and to permit persons to whom the Software is</span>
<a name="l00010"></a>00010 <span class="comment">furnished to do so, subject to the following conditions:</span>
<a name="l00011"></a>00011 <span class="comment"></span>
<a name="l00012"></a>00012 <span class="comment">The above copyright notice and this permission notice shall be included in</span>
<a name="l00013"></a>00013 <span class="comment">all copies or substantial portions of the Software.</span>
<a name="l00014"></a>00014 <span class="comment"></span>
<a name="l00015"></a>00015 <span class="comment">THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span>
<a name="l00016"></a>00016 <span class="comment">IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span>
<a name="l00017"></a>00017 <span class="comment">FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span>
<a name="l00018"></a>00018 <span class="comment">AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span>
<a name="l00019"></a>00019 <span class="comment">LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span>
<a name="l00020"></a>00020 <span class="comment">OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN</span>
<a name="l00021"></a>00021 <span class="comment">THE SOFTWARE. */</span>
<a name="l00022"></a>00022 
<a name="l00023"></a>00023 <span class="comment">// Home page: http://aumiks.googlecode.com</span>
<a name="l00024"></a>00024 
<a name="l00029"></a>00029 <span class="preprocessor">#pragma once</span>
<a name="l00030"></a>00030 <span class="preprocessor"></span>
<a name="l00031"></a>00031 
<a name="l00032"></a>00032 
<a name="l00033"></a>00033 <span class="preprocessor">#include &lt;pulse/simple.h&gt;</span>
<a name="l00034"></a>00034 <span class="preprocessor">#include &lt;pulse/error.h&gt;</span>
<a name="l00035"></a>00035 
<a name="l00036"></a>00036 <span class="preprocessor">#include &quot;<a class="code" href="WriteBasedBackend_8hpp.htm">WriteBasedBackend.hpp</a>&quot;</span>
<a name="l00037"></a>00037 
<a name="l00038"></a>00038 
<a name="l00039"></a>00039 <span class="keyword">namespace</span>{
<a name="l00040"></a>00040 
<a name="l00041"></a>00041 <span class="keyword">class </span>PulseAudioBackend : <span class="keyword">public</span> WriteBasedBackend{
<a name="l00042"></a>00042         pa_simple *handle;
<a name="l00043"></a>00043 
<a name="l00044"></a>00044         PulseAudioBackend(<span class="keywordtype">unsigned</span> bufferSizeFrames, <a class="code" href="namespaceaumiks.htm#a73d8bc01a7156a5f6f191e6c5462b2ab" title="Sound output format.">aumiks::E_Format</a> format) :
<a name="l00045"></a>00045                         WriteBasedBackend(bufferSizeFrames * aumiks::<a class="code" href="namespaceaumiks.htm#a4d9bb89d8dc7384c0a9b21a229f6d31c" title="Returns frame size for given sound output format.">BytesPerFrame</a>(format))
<a name="l00046"></a>00046         {
<a name="l00047"></a>00047                 TRACE(&lt;&lt; <span class="stringliteral">&quot;opening device&quot;</span> &lt;&lt; std::endl)
<a name="l00048"></a>00048 
<a name="l00049"></a>00049                 pa_sample_spec ss;
<a name="l00050"></a>00050                 ss.format = PA_SAMPLE_S16NE;<span class="comment">//Native endian</span>
<a name="l00051"></a>00051                 ss.channels = aumiks::<a class="code" href="namespaceaumiks.htm#a38742c8c01d2953443544719efafc711" title="Returns number of samples per frame for given sound output format.">SamplesPerFrame</a>(format);
<a name="l00052"></a>00052                 ss.rate = aumiks::<a class="code" href="namespaceaumiks.htm#ae0aac0c5e99d7ab38d758f1ffe0ef419" title="Returns sampling rate for given sound output format.">SamplingRate</a>(format);
<a name="l00053"></a>00053 
<a name="l00054"></a>00054                 <span class="keywordtype">unsigned</span> bufferSizeInBytes = bufferSizeFrames * aumiks::<a class="code" href="namespaceaumiks.htm#a4d9bb89d8dc7384c0a9b21a229f6d31c" title="Returns frame size for given sound output format.">BytesPerFrame</a>(format);
<a name="l00055"></a>00055                 pa_buffer_attr ba;
<a name="l00056"></a>00056                 ba.fragsize = bufferSizeInBytes;
<a name="l00057"></a>00057                 ba.tlength = bufferSizeInBytes;
<a name="l00058"></a>00058                 ba.minreq = bufferSizeInBytes / 2;
<a name="l00059"></a>00059                 ba.maxlength = ba.tlength;
<a name="l00060"></a>00060                 ba.prebuf = ba.tlength;
<a name="l00061"></a>00061                 
<a name="l00062"></a>00062                 pa_channel_map cm;
<a name="l00063"></a>00063                 pa_channel_map_init_auto(&amp;cm, ss.channels, PA_CHANNEL_MAP_WAVEEX);
<a name="l00064"></a>00064 
<a name="l00065"></a>00065                 <span class="keywordtype">int</span> error;
<a name="l00066"></a>00066 
<a name="l00067"></a>00067                 this-&gt;handle = pa_simple_new(
<a name="l00068"></a>00068                                 0, <span class="comment">// Use the default server.</span>
<a name="l00069"></a>00069                                 &quot;aumiks&quot;, <span class="comment">// Our application&#39;s name.</span>
<a name="l00070"></a>00070                                 PA_STREAM_PLAYBACK,
<a name="l00071"></a>00071                                 0, <span class="comment">// Use the default device.</span>
<a name="l00072"></a>00072                                 &quot;Music&quot;, <span class="comment">// Description of our stream.</span>
<a name="l00073"></a>00073                                 &amp;ss, <span class="comment">// our sample format.</span>
<a name="l00074"></a>00074                                 &amp;cm, <span class="comment">// channel map</span>
<a name="l00075"></a>00075                                 &amp;ba, <span class="comment">// buffering attributes.</span>
<a name="l00076"></a>00076                                 &amp;error
<a name="l00077"></a>00077                         );
<a name="l00078"></a>00078 
<a name="l00079"></a>00079                 if(!this-&gt;handle){
<a name="l00080"></a>00080                         TRACE(&lt;&lt; <span class="stringliteral">&quot;error opening PulseAudio connection (&quot;</span> &lt;&lt; pa_strerror(error) &lt;&lt; <span class="stringliteral">&quot;)&quot;</span> &lt;&lt; std::endl)
<a name="l00081"></a>00081                         throw aumiks::Exc(&quot;error opening PulseAudio connection&quot;);
<a name="l00082"></a>00082                 }
<a name="l00083"></a>00083                 
<a name="l00084"></a>00084                 this-&gt;Start();<span class="comment">//start thread</span>
<a name="l00085"></a>00085         }
<a name="l00086"></a>00086         
<a name="l00087"></a>00087         <span class="comment">//override</span>
<a name="l00088"></a>00088         <span class="keywordtype">void</span> Write(const ting::Buffer&lt;ting::u8&gt;&amp; buf){
<a name="l00089"></a>00089 <span class="comment">//              ASSERT(buf.Size() == this-&gt;BufferSizeInBytes())</span>
<a name="l00090"></a>00090 
<a name="l00091"></a>00091                 <span class="keywordflow">if</span>(pa_simple_write(
<a name="l00092"></a>00092                                 this-&gt;handle,
<a name="l00093"></a>00093                                 buf.Begin(),
<a name="l00094"></a>00094                                 size_t(buf.SizeInBytes()),
<a name="l00095"></a>00095                                 0 <span class="comment">// no error return</span>
<a name="l00096"></a>00096                         ) &lt; 0)
<a name="l00097"></a>00097                 {
<a name="l00098"></a>00098                         <span class="comment">//TODO: handle error somehow, throw exception</span>
<a name="l00099"></a>00099                         <span class="comment">//ignore error</span>
<a name="l00100"></a>00100                         TRACE(&lt;&lt; <span class="stringliteral">&quot;pa_simple_write(): error&quot;</span> &lt;&lt; std::endl)
<a name="l00101"></a>00101                 }
<a name="l00102"></a>00102         }
<a name="l00103"></a>00103 
<a name="l00104"></a>00104 <span class="keyword">public</span>:
<a name="l00105"></a>00105 
<a name="l00106"></a>00106         <span class="keyword">virtual</span> ~PulseAudioBackend()throw(){
<a name="l00107"></a>00107                 this-&gt;StopThread();
<a name="l00108"></a>00108                 
<a name="l00109"></a>00109                 ASSERT(this-&gt;handle)
<a name="l00110"></a>00110                 pa_simple_free(this-&gt;handle);
<a name="l00111"></a>00111         }
<a name="l00112"></a>00112         
<a name="l00113"></a>00113         inline static ting::Ptr&lt;PulseAudioBackend&gt; New(<span class="keywordtype">unsigned</span> bufferSizeFrames, aumiks::<a class="code" href="namespaceaumiks.htm#a73d8bc01a7156a5f6f191e6c5462b2ab" title="Sound output format.">E_Format</a> format){
<a name="l00114"></a>00114                 <span class="keywordflow">return</span> ting::Ptr&lt;PulseAudioBackend&gt;(
<a name="l00115"></a>00115                                 <span class="keyword">new</span> PulseAudioBackend(bufferSizeFrames, format)
<a name="l00116"></a>00116                         );
<a name="l00117"></a>00117         }
<a name="l00118"></a>00118 };
<a name="l00119"></a>00119 
<a name="l00120"></a>00120 }<span class="comment">//~namespace</span>
</pre></div></div>
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="PulseAudioBackend_8hpp.htm">PulseAudioBackend.hpp</a>      </li>
      <li class="footer">Generated on Tue Mar 13 2012 14:32:08 for libaumiks by&#160;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.4 </li>
    </ul>
  </div>

</body>
</html>
