<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>libaumiks: aumiks::Lib Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript">
$(document).ready(initResizable);
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<!-- Generated by Doxygen 1.7.4 -->
<div id="top">
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">libaumiks&#160;<span id="projectnumber">0.2.0</span></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.htm"><span>Class&#160;List</span></a></li>
      <li><a href="classes.htm"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('classaumiks_1_1Lib.htm','');
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">aumiks::Lib Class Reference</div>  </div>
</div>
<div class="contents">
<!-- doxytag: class="aumiks::Lib" -->
<p>aumiks library singleton class.  
 <a href="classaumiks_1_1Lib.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="aumiks_8hpp_source.htm">aumiks.hpp</a>&gt;</code></p>

<p><a href="classaumiks_1_1Lib-members.htm">List of all members.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><b>MixerBuffer</b></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><b>MixerBufferImpl</b></td></tr>
<tr><td colspan="2"><h2><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaumiks_1_1Lib.htm#ae08a50f66a8126e7b3a95dd94c0a1902">Lib</a> (ting::u16 bufferSizeMillis=100, <a class="el" href="namespaceaumiks.htm#a73d8bc01a7156a5f6f191e6c5462b2ab">aumiks::E_Format</a> format=STEREO_16_22050)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Create sound library singleton instance.  <a href="#ae08a50f66a8126e7b3a95dd94c0a1902"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaumiks_1_1Lib.htm#ad102135de4c8828153b14c60c646ce59">SetMuted</a> (bool muted)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Mute sound output.  <a href="#ad102135de4c8828153b14c60c646ce59"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaumiks_1_1Lib.htm#af0f18324ba93f22891136a388eb78dc5">SetUnmuted</a> (bool unmuted)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Unmute the sound.  <a href="#af0f18324ba93f22891136a388eb78dc5"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaumiks_1_1Lib.htm#a1146f1485b863c073592cdb89bb2b2ba">Mute</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Mute the sound.  <a href="#a1146f1485b863c073592cdb89bb2b2ba"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaumiks_1_1Lib.htm#a27c23b902a9353b1f9b86ecc74822cba">Unmute</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Un-mute the sound.  <a href="#a27c23b902a9353b1f9b86ecc74822cba"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaumiks_1_1Lib.htm#a1d779c278e24a190f4d5f8b2eb03fc44">IsMuted</a> () const </td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if sound output is muted or not.  <a href="#a1d779c278e24a190f4d5f8b2eb03fc44"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaumiks_1_1Lib.htm#ae5ceb6d7c4c0d3a87a5e5eb2b12297a0">SetPaused</a> (bool pause)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the paused state of the audio engine.  <a href="#ae5ceb6d7c4c0d3a87a5e5eb2b12297a0"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaumiks_1_1Lib.htm#af3d6fc09992cd1426769b94ee4972fb5">Pause</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Pause audio engine.  <a href="#af3d6fc09992cd1426769b94ee4972fb5"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaumiks_1_1Lib.htm#ae5724ae64cdf42478243cd2808780104">Resume</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Resume audio engine.  <a href="#ae5724ae64cdf42478243cd2808780104"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaumiks_1_1Lib.htm#acffb41b8c366c2322f1befdc26ee32bf">AddEffect_ts</a> (const ting::Ref&lt; <a class="el" href="classaumiks_1_1Effect.htm">Effect</a> &gt; &amp;effect)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Add global effect.  <a href="#acffb41b8c366c2322f1befdc26ee32bf"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaumiks_1_1Lib.htm#a872f0e46abe4cdcb031b1b9911842d36">RemoveEffect_ts</a> (const ting::Ref&lt; <a class="el" href="classaumiks_1_1Effect.htm">Effect</a> &gt; &amp;effect)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Remove global effect.  <a href="#a872f0e46abe4cdcb031b1b9911842d36"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classaumiks_1_1Lib.htm#ae8cdfbd43c3a5e5a7355c81f6a519621">RemoveAllEffects_ts</a> ()</td></tr>
</table>
<hr/><a name="details" id="details"></a><h2>Detailed Description</h2>
<div class="textblock"><p>aumiks library singleton class. </p>
<p>This is a main class of the aumiks library. Before using the library one has to create a single instance of the <a class="el" href="classaumiks_1_1Lib.htm" title="aumiks library singleton class.">Lib</a> class. It will perform necessary sound output initializations and open sound output device. Destroying the object will close the sound output device and clean all the resources. </p>
</div><hr/><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="ae08a50f66a8126e7b3a95dd94c0a1902"></a><!-- doxytag: member="aumiks::Lib::Lib" ref="ae08a50f66a8126e7b3a95dd94c0a1902" args="(ting::u16 bufferSizeMillis=100, aumiks::E_Format format=STEREO_16_22050)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">aumiks::Lib::Lib </td>
          <td>(</td>
          <td class="paramtype">ting::u16&#160;</td>
          <td class="paramname"><em>bufferSizeMillis</em> = <code>100</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceaumiks.htm#a73d8bc01a7156a5f6f191e6c5462b2ab">aumiks::E_Format</a>&#160;</td>
          <td class="paramname"><em>format</em> = <code>STEREO_16_22050</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Create sound library singleton instance. </p>
<p>Creates singleton instance of sound library object and opens sound device. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">bufferSizeMillis</td><td>- size of desired playing buffer in milliseconds. Use smaller buffers for higher latency. Note, that very small buffer may result in bigger overhead and lags. The same applies to very big buffer sizes. </td></tr>
    <tr><td class="paramname">format</td><td>- format of sound output. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<hr/><h2>Member Function Documentation</h2>
<a class="anchor" id="acffb41b8c366c2322f1befdc26ee32bf"></a><!-- doxytag: member="aumiks::Lib::AddEffect_ts" ref="acffb41b8c366c2322f1befdc26ee32bf" args="(const ting::Ref&lt; Effect &gt; &amp;effect)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void aumiks::Lib::AddEffect_ts </td>
          <td>(</td>
          <td class="paramtype">const ting::Ref&lt; <a class="el" href="classaumiks_1_1Effect.htm">Effect</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>effect</em></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Add global effect. </p>
<p>Adds the effect to the list of global effects which are applied to the final mixing buffer after all the playing channels are mixed. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">effect</td><td>- effect to add. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a1d779c278e24a190f4d5f8b2eb03fc44"></a><!-- doxytag: member="aumiks::Lib::IsMuted" ref="a1d779c278e24a190f4d5f8b2eb03fc44" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool aumiks::Lib::IsMuted </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Check if sound output is muted or not. </p>
<dl class="return"><dt><b>Returns:</b></dt><dd>true if sound output is muted. </dd>
<dd>
false otherwise. </dd></dl>

</div>
</div>
<a class="anchor" id="a1146f1485b863c073592cdb89bb2b2ba"></a><!-- doxytag: member="aumiks::Lib::Mute" ref="a1146f1485b863c073592cdb89bb2b2ba" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void aumiks::Lib::Mute </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Mute the sound. </p>
<p>See description of <a class="el" href="classaumiks_1_1Lib.htm#ad102135de4c8828153b14c60c646ce59" title="Mute sound output.">Lib::SetMuted()</a> method for more info. </p>

</div>
</div>
<a class="anchor" id="af3d6fc09992cd1426769b94ee4972fb5"></a><!-- doxytag: member="aumiks::Lib::Pause" ref="af3d6fc09992cd1426769b94ee4972fb5" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void aumiks::Lib::Pause </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Pause audio engine. </p>
<p>Moves the audio engine to paused state. Essentially it just calls the SetPaused_ts(true) method. The method is not thread-safe and should be called from the thread where <a class="el" href="classaumiks_1_1Lib.htm" title="aumiks library singleton class.">Lib</a> object was created. </p>

</div>
</div>
<a class="anchor" id="ae8cdfbd43c3a5e5a7355c81f6a519621"></a><!-- doxytag: member="aumiks::Lib::RemoveAllEffects_ts" ref="ae8cdfbd43c3a5e5a7355c81f6a519621" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void aumiks::Lib::RemoveAllEffects_ts </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a872f0e46abe4cdcb031b1b9911842d36"></a><!-- doxytag: member="aumiks::Lib::RemoveEffect_ts" ref="a872f0e46abe4cdcb031b1b9911842d36" args="(const ting::Ref&lt; Effect &gt; &amp;effect)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void aumiks::Lib::RemoveEffect_ts </td>
          <td>(</td>
          <td class="paramtype">const ting::Ref&lt; <a class="el" href="classaumiks_1_1Effect.htm">Effect</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>effect</em></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Remove global effect. </p>
<p>Removes the effect from the list of global effects which are applied to the final mixing buffer after all the playing channels are mixed. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">effect</td><td>- effect to remove. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ae5724ae64cdf42478243cd2808780104"></a><!-- doxytag: member="aumiks::Lib::Resume" ref="ae5724ae64cdf42478243cd2808780104" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void aumiks::Lib::Resume </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Resume audio engine. </p>
<p>Un-pauses the audio engine. See Pause_ts() method for more info. Essentially it just calls the SetPaused_ts(false) method. The method is not thread-safe and should be called from the thread where <a class="el" href="classaumiks_1_1Lib.htm" title="aumiks library singleton class.">Lib</a> object was created. </p>

</div>
</div>
<a class="anchor" id="ad102135de4c8828153b14c60c646ce59"></a><!-- doxytag: member="aumiks::Lib::SetMuted" ref="ad102135de4c8828153b14c60c646ce59" args="(bool muted)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void aumiks::Lib::SetMuted </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>muted</em></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Mute sound output. </p>
<p>Mute the sound output. This is the same as the resulting sound volume would be set to zero. I.e. all the computational resources for sound mixing etc. are still being consumed when sound is muted. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">muted</td><td>- pass true to mute the sound, false to un-mute. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ae5ceb6d7c4c0d3a87a5e5eb2b12297a0"></a><!-- doxytag: member="aumiks::Lib::SetPaused" ref="ae5ceb6d7c4c0d3a87a5e5eb2b12297a0" args="(bool pause)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void aumiks::Lib::SetPaused </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>pause</em></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Sets the paused state of the audio engine. </p>
<p>Moves engine to paused or resumed state depending on the passed parameter value. In paused state the engine still holds the audio device open but does not play the main audio buffer, thus does not consume CPU resources. The method is not thread-safe and should be called from the thread where <a class="el" href="classaumiks_1_1Lib.htm" title="aumiks library singleton class.">Lib</a> object was created. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">pause</td><td>- determines whether to pause or resume the audio engine. Pass true to pause and false to resume. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="af0f18324ba93f22891136a388eb78dc5"></a><!-- doxytag: member="aumiks::Lib::SetUnmuted" ref="af0f18324ba93f22891136a388eb78dc5" args="(bool unmuted)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void aumiks::Lib::SetUnmuted </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>unmuted</em></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Unmute the sound. </p>
<p>Inversion of <a class="el" href="classaumiks_1_1Lib.htm#ad102135de4c8828153b14c60c646ce59" title="Mute sound output.">Lib::SetMuted()</a> method. See description of <a class="el" href="classaumiks_1_1Lib.htm#ad102135de4c8828153b14c60c646ce59" title="Mute sound output.">Lib::SetMuted()</a> method for more info. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">unmuted</td><td>- true to un-mute the sound, false to mute. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a27c23b902a9353b1f9b86ecc74822cba"></a><!-- doxytag: member="aumiks::Lib::Unmute" ref="a27c23b902a9353b1f9b86ecc74822cba" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void aumiks::Lib::Unmute </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Un-mute the sound. </p>
<p>See description of <a class="el" href="classaumiks_1_1Lib.htm#ad102135de4c8828153b14c60c646ce59" title="Mute sound output.">Lib::SetMuted()</a> method for more info. </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="aumiks_8hpp_source.htm">aumiks.hpp</a></li>
</ul>
</div>
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="namespaceaumiks.htm">aumiks</a>      </li>
      <li class="navelem"><a class="el" href="classaumiks_1_1Lib.htm">Lib</a>      </li>
      <li class="footer">Generated on Tue Mar 13 2012 14:32:08 for libaumiks by&#160;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.4 </li>
    </ul>
  </div>

</body>
</html>
